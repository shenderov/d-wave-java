buildscript {
    ext {
        seleniumVersion = '3.141.59'
    }
}

plugins {
    id 'java'
}

group 'me.shenderov'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    compile("org.seleniumhq.selenium:selenium-api:${seleniumVersion}")
    compile("org.seleniumhq.selenium:selenium-support:${seleniumVersion}")
    compile("org.seleniumhq.selenium:selenium-chrome-driver:${seleniumVersion}")
    compile("org.seleniumhq.selenium:selenium-firefox-driver:${seleniumVersion}")
    compile("org.seleniumhq.selenium:selenium-opera-driver:${seleniumVersion}")
    compile("org.seleniumhq.selenium:selenium-edge-driver:${seleniumVersion}")
    compile("org.seleniumhq.selenium:selenium-ie-driver:${seleniumVersion}")
    compile("com.codeborne:phantomjsdriver:1.4.4")
    compile("io.github.bonigarcia:webdrivermanager:3.7.1")
    compile("org.testng:testng:6.14.3")
    compile("org.slf4j:slf4j-simple:1.7.29")
}

def baseUrl = "https://www.seleniumeasy.com/test/"

test {
    outputs.upToDateWhen { false }
    systemProperty "driverType", project.hasProperty("driverType") ? project.property("driverType") : "chrome"
    systemProperty "baseUrl", project.hasProperty("baseUrl") ? project.property("baseUrl") : baseUrl

    useTestNG() {
        useDefaultListeners = true
        if(project.hasProperty("suiteFile") && !(project.property("suiteFile") as String).isEmpty()){
            suites "src/test/resources/suites/${project.property("suiteFile")}"
        }
    }
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
    reports.html.enabled = false
}